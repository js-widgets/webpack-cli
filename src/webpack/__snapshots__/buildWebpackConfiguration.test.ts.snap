// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`buildWebpackConfiguration builds the correct configuration 1`] = `
Object {
  "devtool": "inline-source-map",
  "entry": Object {
    "fake": Object {
      "import": "./render.js",
      "library": Object {
        "export": "default",
        "name": "renderFake",
        "type": "window",
      },
    },
  },
  "externals": Object {
    "react": "React",
    "react-dom": "ReactDOM",
    "react-intl": "ReactIntl",
    "react-slick": "Slider",
  },
  "externalsPresets": Object {
    "webAsync": true,
  },
  "externalsType": "window",
  "mode": "none",
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.\\(s\\[ac\\]\\|c\\)ss\\$/i,
        "use": Array [
          "style-loader",
          "css-loader",
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "postcssOptions": Object {
                "plugins": Array [
                  Array [
                    "postcss-preset-env",
                    Object {},
                  ],
                ],
              },
            },
          },
          "sass-loader",
        ],
      },
      Object {
        "test": /\\\\\\.\\(png\\|jpe\\?g\\|gif\\)\\$/i,
        "type": "asset",
      },
      Object {
        "exclude": /node_modules/,
        "test": /\\\\\\.\\(t\\|j\\)sx\\?\\$/,
        "use": Object {
          "loader": "babel-loader",
          "options": Object {
            "cacheDirectory": true,
            "presets": Array [
              "@babel/preset-env",
              "@babel/preset-typescript",
            ],
          },
        },
      },
    ],
  },
  "output": Object {
    "assetModuleFilename": "[name]/images/[hash][ext][query]",
    "chunkFilename": "[name]/js/[contenthash:8].chunk.js",
    "filename": "[name]/js/main.js",
    "path": "src/__testData__/widgetDefinitions/widgets",
  },
  "plugins": Array [
    CleanWebpackPlugin {
      "apply": [Function],
      "cleanAfterEveryBuildPatterns": Array [],
      "cleanOnceBeforeBuildPatterns": Array [
        "**/*",
      ],
      "cleanStaleWebpackAssets": true,
      "currentAssets": Array [],
      "dangerouslyAllowCleanPatternsOutsideProject": false,
      "dry": false,
      "handleDone": [Function],
      "handleInitial": [Function],
      "initialClean": false,
      "outputPath": "",
      "protectWebpackAssets": true,
      "removeFiles": [Function],
      "verbose": false,
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "NODE_ENV": "development",
        "PUBLIC_ASSETS_URL": "",
        "PUBLIC_URL": "",
      },
      "keys": Array [
        "NODE_ENV",
        "DEBUG",
        "PUBLIC_URL",
        "PUBLIC_ASSETS_URL",
      ],
    },
    CopyPlugin {
      "options": Object {},
      "patterns": Array [
        Object {
          "context": ".",
          "from": "thumbnail.png",
          "to": "src/__testData__/widgetDefinitions/widgets/fake/[name].[contenthash:8][ext]",
        },
      ],
    },
  ],
  "profile": true,
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
    ],
  },
  "target": "web",
}
`;

exports[`buildWebpackConfiguration builds the correct configuration with empty data 1`] = `
Object {
  "devtool": "inline-source-map",
  "entry": Object {},
  "mode": "development",
  "module": Object {
    "rules": Array [
      Object {
        "test": /\\\\\\.\\(s\\[ac\\]\\|c\\)ss\\$/i,
        "use": Array [
          "style-loader",
          "css-loader",
          Object {
            "loader": "postcss-loader",
            "options": Object {
              "postcssOptions": Object {
                "plugins": Array [
                  Array [
                    "postcss-preset-env",
                    Object {},
                  ],
                ],
              },
            },
          },
          "sass-loader",
        ],
      },
      Object {
        "test": /\\\\\\.\\(png\\|jpe\\?g\\|gif\\)\\$/i,
        "type": "asset",
      },
      Object {
        "exclude": /node_modules/,
        "test": /\\\\\\.\\(t\\|j\\)sx\\?\\$/,
        "use": Object {
          "loader": "babel-loader",
          "options": Object {
            "cacheDirectory": true,
            "presets": Array [
              "@babel/preset-env",
              "@babel/preset-typescript",
            ],
          },
        },
      },
    ],
  },
  "output": Object {
    "assetModuleFilename": "[name]/images/[hash][ext][query]",
    "chunkFilename": "[name]/js/[contenthash:8].chunk.js",
    "filename": "[name]/js/main.js",
    "path": "widgets",
  },
  "plugins": Array [
    CleanWebpackPlugin {
      "apply": [Function],
      "cleanAfterEveryBuildPatterns": Array [],
      "cleanOnceBeforeBuildPatterns": Array [
        "**/*",
      ],
      "cleanStaleWebpackAssets": true,
      "currentAssets": Array [],
      "dangerouslyAllowCleanPatternsOutsideProject": false,
      "dry": false,
      "handleDone": [Function],
      "handleInitial": [Function],
      "initialClean": false,
      "outputPath": "",
      "protectWebpackAssets": true,
      "removeFiles": [Function],
      "verbose": false,
    },
    EnvironmentPlugin {
      "defaultValues": Object {
        "DEBUG": false,
        "NODE_ENV": "development",
        "PUBLIC_ASSETS_URL": "",
        "PUBLIC_URL": "",
      },
      "keys": Array [
        "NODE_ENV",
        "DEBUG",
        "PUBLIC_URL",
        "PUBLIC_ASSETS_URL",
      ],
    },
  ],
  "profile": true,
  "resolve": Object {
    "extensions": Array [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
    ],
  },
  "target": "web",
}
`;
